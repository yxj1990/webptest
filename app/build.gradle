apply plugin: 'com.android.application'

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}
def verCode=14

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    dexOptions {
        preDexLibraries = false
    }
    dexOptions {
        javaMaxHeapSize "1g"
    }
    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('../debug.keystore')
            storePassword 'android'
        }
        release {
            keyAlias 'homelink'
            keyPassword 'homelink15120011266'
            storeFile file('../ziruke.keystore')
            storePassword 'ziruke15120011266'
        }
//    }

//    signingConfigs {
//        signingConfig {
//            keyAlias 'xxx'
//            keyPassword 'xxx'
//            storeFile file('xxx')
//            storePassword 'xxx'
//        }
        defaultConfig {
            applicationId "com.yangxj.webptest"
            minSdkVersion 15
            targetSdkVersion 23
            multiDexEnabled true
            versionCode verCode
            versionName APP_VERSION
            resValue("string", "app_version", APP_VERSION)
            buildConfigField "boolean", "LEO_DEBUG", "true"
            buildConfigField "String", "API_SERVER_URL", RELEASE_API_SERVER_URL
            buildConfigField "String", "API_SERVER_URL_MALL", RELEASE_API_SERVER_URL_MALL

            manifestPlaceholders = [CHANNEL_NAME: "yingyongbao"]
            ndk {
                moduleName "webptest"  //设置库(so)文件名称
                ldLibs "log"
                abiFilters "armeabi-v7a", "x86", "armeabi", "mips"
            }
        }
        buildTypes {
            release {
                buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
                buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
                buildConfigField 'String', 'IM_SERVER_HOST', RELEASE_IM_SERVER_HOST
                buildConfigField 'int', 'IM_SERVER_PORT', RELEASE_IM_SERVER_PORT
                buildConfigField "boolean", "LEO_DEBUG", RELEASE_LEO_DEBUG
                minifyEnabled true
                zipAlignEnabled true
                shrinkResources true
                signingConfig signingConfigs.release
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
            debug {
                buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
                buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
                buildConfigField 'String', 'IM_SERVER_HOST', RELEASE_IM_SERVER_HOST
                buildConfigField 'int', 'IM_SERVER_PORT', RELEASE_IM_SERVER_PORT
                buildConfigField "boolean", "LEO_DEBUG", RELEASE_LEO_DEBUG
                signingConfig signingConfigs.debug
            }
        }

        productFlavors {
            commonsoon {
                manifestPlaceholders = [UMENG_CHANNEL_VALUE: "commonsoon"]
            }
            zhushou91 {
                manifestPlaceholders = [UMENG_CHANNEL_VALUE: "zhushou91"]
            }
        }

        allprojects {
            repositories {
                mavenCentral()
                maven { url "https://jitpack.io" }
            }
        }
        //修改生成的apk名字
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def newName
                def timeNow
                def oldFile = output.outputFile
                def outDirectory = oldFile.parent

                if ("true".equals(IS_JENKINS)) {
                    timeNow = JENKINS_TIME
                    outDirectory = 'D:\\Program Files\\tomcat/webapps/jenkins/apk'
                    newName = 'yj-android-v' +
                            APP_VERSION + '-' + variant.productFlavors[0].name + timeNow + '-' + variant.buildType.name + '.apk'
                } else {
                    timeNow = getDate()
                    if (variant.buildType.name.equals('debug')) {
                        newName = "yj-android-v${APP_VERSION}-debug.apk"
                    } else {
                        newName = 'yj-android-v' +
                                APP_VERSION + '-' + variant.productFlavors[0].name + timeNow + '-' + variant.buildType.name + '.apk'
                    }
                }

                output.outputFile = new File(outDirectory, newName)

            }
        }
    }

    dependencies {
        compile fileTree(include: ['*.jar'], dir: 'libs')
        compile files('libs/libwebp.jar')
        testCompile 'junit:junit:4.12'
//        compile 'com.Android.support:support-v4:22.2.1'
//        compile 'com.android.support:appcompat-v7:23.4.0'

//        compile ('com.Android.support:appcompat-v7:22.2.1'){
//            exclude group: 'com.android.support', module: 'support-v4'
//        }
    }
}